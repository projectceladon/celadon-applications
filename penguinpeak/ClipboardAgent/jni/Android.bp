//
// Copyright (C) 2008 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This makefile supplies the rules for building a library of JNI code for
// use by our example of how to bundle a shared library with an APK.

cc_library_shared {
    name: "libVsocketClientImpl",
    // All of the source files that we will compile.
    srcs: ["VsockClientImpl.cpp"],
    // All of the shared libraries we link against.
    // liblog is used to print trace log in C plus plus source code.
    shared_libs: ["liblog"],
    // No static libraries.
    static_libs: [],
    cflags: [
        "-Wall",
        "-Werror",
    ],
    // We cannot use stl:"none" here to link libc++ dynamically because
    // it caused "'iostream' file not found" build issue.
    stl: "c++_static",
    sdk_version: "current",
}

genrule {
    name: "pgp-proto",
    tool_files: [ ":TAF-proto-gen", ":TAF-templates", ":TAF-proto-gen-deps",],
    srcs: [
        "proto/appstatus-protogen.inp",
        "proto/notification-protogen.inp",
    ],
    out: [
        "proto/appstatus-gen.proto",
        "proto/notification-gen.proto",
    ],
    cmd: "$(location) -I vendor/intel/external/apps/penguinpeak/ClipboardAgent/jni/ -o $(genDir) -i $(in) --proto",
}

genrule {
    name: "pgp-headers",
    tool_files: [ ":TAF-proto-gen", ":TAF-templates", ":TAF-proto-gen-deps",],
    srcs: [
        "proto/appstatus-protogen.inp",
        "proto/notification-protogen.inp",
    ],
    out: [
        "proto/appstatus.h",
        "proto/notification.h",
    ],
    cmd: "$(location) -I vendor/intel/external/apps/penguinpeak/ClipboardAgent/jni/ -o $(genDir) -i $(in) --header",
}


genrule {
    name: "pgp-gRPCGenStub_h",
    tools: [
	"aprotoc",
	"protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -Iout/soong/.intermediates/vendor/intel/external/apps/penguinpeak/ClipboardAgent/jni/pgp-proto/gen -Ivendor/intel/external/apps/penguinpeak/ClipboardAgent/jni -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [ ":pgp-proto",
	        "proto/appstatus.proto",
	        "proto/notification.proto",
          ],
    out: [
        "proto/appstatus.pb.h",
        "proto/appstatus-gen.pb.h",
        "proto/appstatus-gen.grpc.pb.h",
        "proto/notification.pb.h",
        "proto/notification-gen.pb.h",
        "proto/notification-gen.grpc.pb.h",
    ],
}

genrule {
    name: "pgp-gRPCGenStub_cc",
    tools: [
	"aprotoc",
	"protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -Iout/soong/.intermediates/vendor/intel/external/apps/penguinpeak/ClipboardAgent/jni/pgp-proto/gen -Ivendor/intel/external/apps/penguinpeak/ClipboardAgent/jni -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
            ":pgp-proto",
	        "proto/appstatus.proto",
            "proto/notification.proto",
          ],
    out: [
        "proto/appstatus.pb.cc",
        "proto/appstatus-gen.pb.cc",
        "proto/appstatus-gen.grpc.pb.cc",
        "proto/notification.pb.cc",
        "proto/notification-gen.pb.cc",
        "proto/notification-gen.grpc.pb.cc",
    ],
}

cc_library_shared {
    name: "libVsockMsgDispatch",
    defaults: ["TAF-defaults",],
    srcs: [
        "DispatchHelper.cpp",
        "adapter.cpp",
    ],
    cflags: [
       "-Wall",
       "-Werror",
       "-Wno-unused-parameter",
       "-Wno-unused-label",
    ],
    generated_headers: [ "pgp-headers", "pgp-gRPCGenStub_h", ],
    generated_sources: [ "pgp-gRPCGenStub_cc", ],
    sdk_version: "current",
}

cc_binary {
    name: "cfc_host_agent",
    host_supported: true,
    defaults: ["TAF-defaults",],
    srcs: [
        "appstatus.cpp",
        "notification.cpp",
    ],
    generated_headers: [ "pgp-headers", "pgp-gRPCGenStub_h", ],
    generated_sources: [ "pgp-gRPCGenStub_cc", ],
}
